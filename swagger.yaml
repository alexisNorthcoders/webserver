openapi: 3.0.0
info:
  title: My API
  description: API documentation for my Node.js service
  version: 1.0.0
servers:
  - url: http://raspberrypi.local:7000
    description: Local server

paths:
  /snake:
    get:
      summary: Serve Snake Game Page
      description: Serves a static HTML file for the Snake game.
      responses:
        '200':
          description: An HTML page with the game.
          content:
            text/html:
              schema:
                type: string
  /zigzag:
    get:
      summary: Serve ZigZag Game Page
      description: Serves a static HTML file for a ZigZag game.
      responses:
        '200':
          description: An HTML page with the game.
          content:
            text/html:
              schema:
                type: string
  /monitor-canvas:
    get:
      summary: Serve a Health Monitor Page
      description: Serves a static HTML file for a health monitor of my raspberry pi.
      responses:
        '200':
          description: An HTML page with the game.
          content:
            text/html:
              schema:
                type: string
  /kings-and-pigs:
    get:
      summary: Serve Platformer Game Page
      description: Serves a static HTML file for a my Kings and Pigs platformer game.
      responses:
        '200':
          description: An HTML page with the game.
          content:
            text/html:
              schema:
                type: string
  /system-info:
    post:
      summary: Post Raspberry Pi System Health Info
      description: Records the system health information of the Raspberry Pi, including temperature, CPU usage, memory usage, disk usage, and disk activity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - temperature
                - cpuUsage
                - memoryUsage
                - diskUsage
                - diskActivity
              properties:
                temperature:
                  type: number
                  description: CPU temperature in Celsius
                  example: 45.6
                cpuUsage:
                  type: number
                  description: CPU usage percentage
                  example: 23.5
                memoryUsage:
                  type: number
                  description: RAM usage percentage
                  example: 68.2
                diskUsage:
                  type: number
                  description: Disk usage percentage
                  example: 85.4
                diskActivity:
                  type: number
                  description: Disk activity percentage
                  example: 12.3
      responses:
        '201':
          description: Record added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Record added successfully"
                  recordId:
                    type: integer
                    example: 42
        '400':
          description: Bad request - Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required fields"
        '500':
          description: Internal server error - Failed to insert record
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to insert record"
  /system-info/{limit}:
    get:
      summary: Get system info records with path parameter
      description: Retrieves the last N system records. The limit can be provided as a path parameter.
      parameters:
        - name: limit
          in: path
          description: Number of records to retrieve
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response with system records.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - timestamp
                    - temperature
                    - cpu_usage
                    - memory_used
                    - memory_total
                    - disk_used
                    - disk_available
                    - disk_read_speed
                    - disk_write_speed
                  properties:
                    id:
                      type: integer
                      nullable: true
                      description: Unique record ID (null if not assigned)
                      example: null
                    timestamp:
                      type: string
                      format: date-time
                      description: Timestamp of the record
                      example: "2025-02-13 22:15:01"
                    temperature:
                      type: string
                      description: CPU temperature with unit (째C)
                      example: "51.0째C"
                    cpu_usage:
                      type: string
                      description: CPU usage percentage
                      example: "2%"
                    memory_used:
                      type: number
                      description: Used memory in MB
                      example: 2387.45
                    memory_total:
                      type: number
                      description: Total memory in MB
                      example: 4045
                    disk_used:
                      type: string
                      description: Used disk space
                      example: "29G"
                    disk_available:
                      type: string
                      description: Available disk space
                      example: "194G"
                    disk_read_speed:
                      type: number
                      description: Disk read speed in MB/s
                      example: 0
                    disk_write_speed:
                      type: number
                      description: Disk write speed in MB/s
                      example: 0
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /system-info/sse:
    get:
      summary: Stream Raspberry Pi System Health Info
      description: Streams the latest system health information of the Raspberry Pi over SSE. Clients can specify a limit on the number of records to receive.
      parameters:
        - name: limit
          in: query
          description: The number of records to stream (defaults to 60)
          required: false
          schema:
            type: integer
            default: 60
            example: 60
      responses:
        '200':
          description: Stream of system health records
          content:
            text/event-stream:
               schema:
                type: array
                items:
                  type: object
                  required:
                    - timestamp
                    - temperature
                    - cpu_usage
                    - memory_used
                    - memory_total
                    - disk_used
                    - disk_available
                    - disk_read_speed
                    - disk_write_speed
                  properties:
                    id:
                      type: integer
                      nullable: true
                      description: Unique record ID (null if not assigned)
                      example: null
                    timestamp:
                      type: string
                      format: date-time
                      description: Timestamp of the record
                      example: "2025-02-13 22:15:01"
                    temperature:
                      type: string
                      description: CPU temperature with unit (째C)
                      example: "51.0째C"
                    cpu_usage:
                      type: string
                      description: CPU usage percentage
                      example: "2%"
                    memory_used:
                      type: number
                      description: Used memory in MB
                      example: 2387.45
                    memory_total:
                      type: number
                      description: Total memory in MB
                      example: 4045
                    disk_used:
                      type: string
                      description: Used disk space
                      example: "29G"
                    disk_available:
                      type: string
                      description: Available disk space
                      example: "194G"
                    disk_read_speed:
                      type: number
                      description: Disk read speed in MB/s
                      example: 0
                    disk_write_speed:
                      type: number
                      description: Disk write speed in MB/s
                      example: 0
        '500':
          description: Internal server error - Failed to retrieve records
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to retrieve records"
  /zigzag/score:
    post:
      summary: Add Zigzag Game Highscore
      description: Accepts the score of the Zigzag game and adds it to the highscore list.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - score
              properties:
                score:
                  type: integer
                  description: The score to be added to the highscore list
                  example: 250
      responses:
        '201':
          description: Highscore added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Highscore added: 250"
        '400':
          description: Bad request - Score is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Score is required"
        '500':
          description: Internal server error - Error adding score
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error adding score"
    get:
      summary: Get last 10 high scores for Zigzag game
      description: Retrieves the last 10 high scores from the "zigzag_highscore".
      responses:
        "200":
          description: Successful response with the last 10 high scores.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    player:
                      type: string
                    score:
                      type: integer
                    date:
                      type: string
                      format: date-time
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
  /snake/score/{userId}:
    get:
      summary: Get the high score for a specific user in the Snake game
      description: Retrieves the high score for the user identified by `userId`.
      parameters:
        - name: userId
          in: path
          description: ID of the user whose score is being requested
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved the user's score
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: integer
                    description: The user's highest score in the Snake game
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: string
    post:
      summary: Add a score for a specific user in the Snake game
      description: Submits a score for a specific user identified by `userId`.
      parameters:
        - name: userId
          in: path
          description: ID of the user whose score is being submitted
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                score:
                  type: integer
                  description: The score to be added for the user
                  example: 500
      responses:
        "201":
          description: Score successfully added for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad request due to missing score
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
